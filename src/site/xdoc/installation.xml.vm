<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <properties>
        <title>IJP Installation</title>
    </properties>

    <body>

        <section name="Installation">

            <subsection name="Compatibility">The ICAT Job Portal will work with an ICAT version of 4.4 or greater.</subsection>

            <subsection name="Prerequisites">

                <ul>
                    <li>
                        The IJP server distribution:
                        <a href="${repoUrl}/org/icatproject/ijp.server/${project.version}/ijp.server-${project.version}-distro.zip">ijp.server-${project.version}-distro.zip</a>
                    </li>
                     <li>
                        A suitable deployed container. The installation scripts support Glassfish.
                        Testing has been carried out with Glassfish 4.0.
                        <a href="http://icatproject.org/installation/glassfish/">Glassfish installation instructions</a>
                        are available.
                    </li>
                    <li>
                        A database as described in
                        <a href="http://icatproject.org/installation/database/">Database installation instructions</a>
                        installed on the server.  During setup you will have to define a jdbc driver and connection details
                        for this database.
                    </li>
                    <li>
                      <p>The database must have a schema "ijp" defined with appropriate grants.  In MySQL, this can be done
                      by logging in as root:
                      </p>
                      <code>
                        $ mysql -u root -p <br/>
                        password: ***** <br/>
                        mysql> create database ijp; <br/>
                        ... <br/>
                        mysql> grant all on ijp.* to 'icat'@'localhost'; <br/>
                      </code>
                      <p>The IJP setup will create its required tables if they do not already exist.</p>
                    </li>
                    <li>
                        Python (version 2.4 to 2.7) installed on the server.
                    </li>
                    <li>
                      One or more IJP batch servers.  The sample unxibatch server may be useful for local development and testing.
                    </li>
                    <li>
                      The IJP server can be used from the IJP plugin for Topcat, or from the IJP command-line client.
                    </li>
                </ul>
            </subsection>

            <subsection name="Summary of steps">
                <ol>
                    <li>
                        Please follow
                        <a href="http://icatproject.org/installation/component/"> the generic installation instructions</a>
                    </li>
                    <li> Update the ijp.properties file with the ICAT, IDS and IJP urls, and URLs of the IJP batch servers.</li>
                    <li>The glassfish certificate for the central IJP server may need to be added to the Java trust store
                      and to the glassfish keystore on each batch server.  See the 
                      <a href="http://icatproject.org/installation/glassfish/">Glassfish installation instructions</a>
                      for more details.</li>
                    <li>The glassfish certificate for each batch server may need to be added to the central IJP server's
                      trust store and glassfish keystore.</li>
                    <li>Check that it works.</li>
                </ol>
            </subsection>

            <subsection name="The setup.properties file">

                <dl>
                    <dt>db.driver</dt>
                    <dd>is the name of the jdbc driver and must match the jar file for your database.</dd>
                    <dt>db.url</dt>
                    <dd>is the connection URL for the DB, e.g. jdbc:mysql://localhost:3306/ijp</dd>
                    <dt>db.username, db.password</dt>
                    <dd>the username and password for connection to the DB</dd>
                    <dt>db.name</dt>
                    <dd>name of the IJP DB</dd>
                    <dt>container</dt>
                    <dd>the application container hosting ijp.server, e.g. Glassfish (note: case is significant)</dd>
                    <tt>home</tt>
                    <dd>location of the container, e.g. /home/glassfishuser/glassfish4
                    <tt>secure</tt>
                    <dd>true (https) or false (http)</dd>
                    <dt>port</dt>
                    <dd>is the administration port of the chosen glassfish domain which is typically 4848.</dd>
                </dl>

                <p>For a local oracle-xe installation the following values of driver, dbProperties should be good except for
                    the user and
                    password values:
                </p>
                <code>
                    driver=oracle.jdbc.pool.OracleDataSource
                    <br />
                    dbProperties=url="'"jdbc:oracle:thin:@//localhost:1521/XE"'":ImplicitCachingEnabled=true:MaxStatements=200:user=icat:password=secret
                    <br />
                </code>
                <p>
                    Note the
                    <tt>"'"</tt>
                    which is needed because the url contains colons which also separate individual properties.
                </p>
                <p>For MySQL:</p>
                <code>
                    db.driver      = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
                    db.url         = jdbc:mysql://localhost:3306/ijp
                    db.username    = icat
                    db.password    = secret
                    db.name        = ijp
                </code>
            </subsection>


            <subsection name="The run.properties file">

                <dl>
                    <dt>icat.url</dt>
                    <dd>The (prefix of the) URL for the ICAT instance to which the IJP should connect,
                        e.g. https://sig-23.esc.rl.ac.uk:8181.
                    </dd>
                    
                    <dt>ids.url</dt>
                    <dd>The (prefix of the) URL for the IDS instance to which the IJP should connect,
                        e.g. https://sig-23.esc.rl.ac.uk:8181.
                    </dd>
                    
                    <dt>ijp.url</dt>
                    <dd>The (prefix of the) URL for the IJP instance itself (to be passed to jobs that create provenance),
                        e.g. https://sig-23.esc.rl.ac.uk:8181.
                    </dd>
                    
                    <dt>batchserverUrls</dt>
                    <dd>List of (prefixes of) URLs for IJP batch servers to which the IJP can submit jobs,
                        e.g. https://sig-23.esc.rl.ac.uk:8181 https://ijp.scarf.rl.ac.uk:8181
                        (note: use whitespace for separation, not commas)
                    </dd>
                    
                    <dt>reader</dt>
                    <dd>Authentication details for an ICAT account used by the IJP to login to ICAT,
                        e.g. "simple username br54 password secret"
                    </dd>
                    
                    <dt>writer</dt>
                    <dd>Authentication details for an ICAT account used by the IJP to login to ICAT and which
                        may be used to change ICAT (specifically, to add Applications for job types if required);
                        e.g. "simple username br54 password secret"
                    </dd>
                    
                    <dt>facilities</dt>
                    <dd>A comma-separated list of names of Facilities that may be used by jobs
                        e.g. "LSF, Test Facility". Facility names may include spaces, but leading/trailing
                        spaces will be removed.
                    </dd>
                    
                    <dt>authn.list</dt>
                    <dd>List of authentication methods to authenticate IJP users. (See the authentication plugin for more details)</dd>
                </dl>

            </subsection>

            <subsection name="Check that the IJP works">
              <p>Using Topcat: install Topcat and add the IJP Topcat plugin; this is normally done on the ICAT server host; configure
                topcat.json, adding the URL for the IJP server. Topcat should now show a My Jobs tab. Go to this tab, then:
                <ul>
                  <li>Click on Configure New Job. If Choose Job Inputs appears, select Run Job With No Inputs</li>
                  <li>From the Job Type list, choose Date, and click Submit Job</li>
                  <li>The Job Submission dialog should appear, and report success and a job ID. Click Close</li>
                  <li>A new job should appear at the top of the My Jobs list</li>
                  <li>Clicking on the job row (but not on the Delete button) should show details of the job</li>
                </ul>
              </p>
              <p>Using the command-line IJP client: install the client, then run the following commands:
                <ul>
                  <li>./ijp login simple username dmf password dmfpass (or similar, depending on your authenticator configuration).
                      This should report a session ID and lifetime.</li>
                  <li>./ijp submit Date; this should report a JobID</li>
                  <li>./ijp status <jobId> should report the job status</li>
                  <li>./ijp output <jobId> should report the standard output of the job</li>
                  <li>./ijp output -e <jobId> should report the error output of the job</li>
                </ul>
              </p>
              <p>Install the demojobs distribution (on both the IJP server and the batch server if they are different).
                 Repeat for these job types, to test other aspects of the IJP, e.gs:
                <dl>
                  <dt>sleepcount</dt>
                      <dd>Asks for sleep duration and no. of iterations. It should be possible to observe the output before the job completes.</dd>
                      
                  <dt>test_args_multi</dt>
                      <dd>Allows the user to select multiple datasets and datafiles and submit them either to a single job, or one job per selection.
                          Output reports the IDs of the selected datasets/datafiles.
                      </dd>
                      
                  <dt>create_datafile</dt>
                      <dd>Allows the user to select one or more datasets; requests a filename and (one-line) contents.
                          For each selected dataset, runs a (separate) job that creates the file in that dataset.
                      </dd>
                      
                  <dt>copy_datafile</dt>
                     <dd>The user should select a single target dataset and a single datafile (in a different dataset).
                         The job will create a copy of the datafile in the target dataset.
                         Note that the IJP allows selection of multiple datasets and/or datafiles, and allows the user to run
                         multiple jobs; but in these cases the jobs will fail.  Only a single dataset and a single datafile
                         (in a different dataset) should be selected.
                     </dd>
                </dl>
              </p>
            </subsection>

        </section>
    </body>
</document>
			
