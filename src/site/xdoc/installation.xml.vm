<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <properties>
        <title>IJP Installation</title>
    </properties>

    <body>

        <section name="Installation">

            <subsection name="Compatibility">The ICAT Job Portal will work with an ICAT version of 4.4 or greater.</subsection>

            <subsection name="Prerequisites">

                <ul>
                    <li>
                        The IJP server distribution:
                        <a href="${repoUrl}/org/icatproject/ijp.server/${project.version}/ijp.server-${project.version}-distro.zip">ijp.server-${project.version}-distro.zip</a>
                    </li>
                     <li>
                        A suitable deployed container (here assumed to be glassfish though tomcat should be sufficient) to support a web
                        application.
                        Testing has been carried out with Glassfish 4.0.
                        <a href="http://icatproject.org/installation/glassfish/">Glassfish installation instructions</a>
                        are available.
                    </li>
                    <li>
                        A database as described in
                        <a href="http://icatproject.org/installation/database/">Database installation instructions</a>
                        installed on the server.  During setup you will have to define a jdbc driver and connection details
                        for this database.
                    </li>
                    <li>
                      <p>The database must have a schema "ijp" defined with appropriate grants.  In MySQL, this can be done
                      by logging in as root:
                      </p>
                      <code>
                        $ mysql -u root -p <br/>
                        password: ***** <br/>
                        mysql> create database ijp; <br/>
                        ... <br/>
                        mysql> grant all on ijp.* to 'icat'@'localhost'; <br/>
                      </code>
                      <p>The IJP setup will create its required tables if they do not already exist.</p>
                    </li>
                    <li>
                        Python (version 2.4 to 2.7) installed on the server.
                    </li>
                    <li>
                      One or more IJP batch servers.  The sample unxibatch server may be useful for local development and testing.
                    </li>
                </ul>
            </subsection>

            <subsection name="Summary of steps">
                <ol>
                    <li>
                        Please follow
                        <a href="http://icatproject.org/installation/component/"> the generic installation instructions</a>
                    </li>
                    <li> Update the ijp.properties file with the ICAT, IDS and IJP urls, and URLs of the IJP batch servers.</li>
                    <li>The glassfish certificate for the central IJP server may need to be added to the Java trust store
                      and to the glassfish keystore on each batch server.  See the 
                      <a href="http://icatproject.org/installation/glassfish/">Glassfish installation instructions</a>
                      for more details.</li>
                    <li>The glassfish certificate for each batch server may need to be added to the central IJP server's
                      trust store and glassfish keystore.</li>
                    <li>Check that it works.</li>
                </ol>
            </subsection>

            <subsection name="The ijp-setup.properties file">

                <dl>
                    <dt>driver</dt>
                    <dd>is the name of the jdbc driver and must match the jar file for your database.</dd>
                    <dt>dbProperties</dt>
                    <dd>identifies the IJP jobs database and how to connect to it.</dd>
                    <dt>glassfish</dt>
                    <dd>is the top level of the glassfish installation. It must contain "glassfish/domains", and will be referred to here as
                        GLASSFISH_HOME as if an environment variable had been set.
                    </dd>
                    <dt>port</dt>
                    <dd>is the administration port of the chosen glassfish domain which is typically 4848.</dd>
                </dl>

                <p>For a local oracle-xe installation the following values of driver, dbProperties should be good except for
                    the user and
                    password values:
                </p>
                <code>
                    driver=oracle.jdbc.pool.OracleDataSource
                    <br />
                    dbProperties=url="'"jdbc:oracle:thin:@//localhost:1521/XE"'":ImplicitCachingEnabled=true:MaxStatements=200:user=icat:password=secret
                    <br />
                </code>
                <p>
                    Note the
                    <tt>"'"</tt>
                    which is needed because the url contains colons which also separate individual properties.
                </p>
                <p>For MySQL:</p>
                <code>
                    driver=com.mysql.jdbc.jdbc2.optional.MysqlDataSource
                    <br />
                    dbProperties=user=icat:password=secret:databaseName=ijp
                    <br />
                </code>
            </subsection>


            <subsection name="The ijp.properties file">

                <dl>
                    <dt>icat.url</dt>
                    <dd>The (prefix of the) URL for the ICAT instance to which the IJP should connect,
                        e.g. https://sig-23.esc.rl.ac.uk:8181.
                    </dd>
                    
                    <dt>ids.url</dt>
                    <dd>The (prefix of the) URL for the IDS instance to which the IJP should connect,
                        e.g. https://sig-23.esc.rl.ac.uk:8181.
                    </dd>
                    
                    <dt>ijp.url</dt>
                    <dd>The (prefix of the) URL for the IJP instance itself (to be passed to jobs that create provenance),
                        e.g. https://sig-23.esc.rl.ac.uk:8181.
                    </dd>
                    
                    <dt>batchserverUrls</dt>
                    <dd>List of (prefixes of) URLs for IJP batch servers to which the IJP can submit jobs,
                        e.g. https://sig-23.esc.rl.ac.uk:8181,https://ijp.scarf.rl.ac.uk:8181
                    </dd>
                    
                    <dt>reader</dt>
                    <dd>Authentication details for an ICAT account used by the IJP to login to ICAT,
                        e.g. "simple username br54 password secret"
                    </dd>
                    
                    <dt>writer</dt>
                    <dd>Authentication details for an ICAT account used by the IJP to login to ICAT and which
                        may be used to change ICAT (specifically, to add Applications for job types if required);
                        e.g. "simple username br54 password secret"
                    </dd>
                    
                    <dt>facilities</dt>
                    <dd>A comma-separated list of names of Facilities that may be used by jobs
                        e.g. "LSF, Test Facility". Facility names may include spaces, but leading/trailing
                        spaces will be removed.
                    </dd>
                    
                    <dt>authn.list</dt>
                    <dd>List of authentication methods to authenticate IJP users. (See the authentication plugin for more details)</dd>
                </dl>

            </subsection>

            <subsection name="Check that the IJP works">
              <p>Launch the IJP by visiting https://localhost:8181/ijp, and login with the credentials defined in ijp.properties. Then:
                <ul>
                  <li>Choose "date" from the list of Job Types</li>
                  <li>Click "Submit Job"; this should bring up a dialog "date Options" with buttons labelled Submit and Close.</li>
                  <li>Click "Submit".  The resulting dialog should display a single Submitted Job ID. Note the ID, and click Close.</li>
                  <li>Click on "Show job status panel"; this should launch a separate dialog listing known jobs and their statuses.</li>
                  <li>At or near the top of the list should be an entry for the noted ID, with name "date".  If the Status is Queued,
                      wait until it changes to Completed.  Once Completed, click Display Job Output.</li>
                  <li>The output display should show that the job has run; at or near the end should be a line that ends with
                      "date ending with code 0".</li>
                </ul>
              </p> 
              <p>Install the demojobs distribution (on both the IJP server and the batch server if they are different).
                 Repeat for these job types, to test other aspects of the IJP, e.gs:
                <dl>
                  <dt>sleepcount</dt>
                      <dd>Asks for sleep duration and no. of iterations. It should be possible to observe the output before the job completes.</dd>
                      
                  <dt>test_args_multi</dt>
                      <dd>Allows the user to select multiple datasets and datafiles and submit them either to a single job, or one job per selection.
                          Output reports the IDs of the selected datasets/datafiles.
                      </dd>
                      
                  <dt>create_datafile</dt>
                      <dd>Allows the user to select one or more datasets; requests a filename and (one-line) contents.
                          For each selected dataset, runs a (separate) job that creates the file in that dataset.
                      </dd>
                      
                  <dt>copy_datafile</dt>
                     <dd>The user should select a single target dataset and a single datafile (in a different dataset).
                         The job will create a copy of the datafile in the target dataset.
                         Note that the IJP allows selection of multiple datasets and/or datafiles, and allows the user to run
                         multiple jobs; but in these cases the jobs will fail.  Only a single dataset and a single datafile
                         (in a different dataset) should be selected.
                     </dd>
                </dl>
              </p>
            </subsection>

        </section>
    </body>
</document>
			
